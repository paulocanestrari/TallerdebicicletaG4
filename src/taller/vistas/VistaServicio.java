/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package taller.vistas;

import com.mycompany.taller.entidades.Servicio;
import com.mycompany.taller.persistencia.Conexion;
import com.mycompany.taller.persistencia.ServicioData;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
//import javax.swing.JLabel;
import javax.swing.JOptionPane;
//import javax.swing.JTextField;
//import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author martin
 */
public class VistaServicio extends javax.swing.JInternalFrame {

    Connection conDataBase = Conexion.getConexion();
    ServicioData sData = new ServicioData(conDataBase);

    List<Servicio> listaServiciosAlta;
    List<Servicio> listaServiciosBaja;

    private DefaultTableModel ModelotablaServiciosAlta;
    private DefaultTableModel ModelotablaServiciosBaja;

    public VistaServicio() {
        initComponents();

        ModelotablaServiciosAlta = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        ModelotablaServiciosBaja = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        armarTablas();
        cargarServiciosAlta();
        cargarServiciosBaja();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLDescripcion = new javax.swing.JLabel();
        jLCosto = new javax.swing.JLabel();
        jTFCosto = new javax.swing.JTextField();
        jLCodigo = new javax.swing.JLabel();
        jTFCodigo = new javax.swing.JTextField();
        jBTNActualizarServicio = new javax.swing.JButton();
        jBTNDarDeAlta = new javax.swing.JButton();
        jBTNLimpiarCampos = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTADescripcion = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTServiciosBaja = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTServiciosAlta = new javax.swing.JTable();
        jBTNfiltrarTabla = new javax.swing.JButton();
        jBTNDarDeBaja = new javax.swing.JButton();
        jLServicioAlta = new javax.swing.JLabel();
        jLservicioBaja = new javax.swing.JLabel();
        jBTNCrearServicio1 = new javax.swing.JButton();
        jTFCodigoBusqueda = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Gestion de Servicios");

        jLDescripcion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jLDescripcion.setText("Descripcion");

        jLCosto.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jLCosto.setText("costo");

        jTFCosto.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jTFCosto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCostoFocusLost(evt);
            }
        });
        jTFCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCostoActionPerformed(evt);
            }
        });

        jLCodigo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jLCodigo.setText("Codigo");

        jTFCodigo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jTFCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCodigoFocusLost(evt);
            }
        });
        jTFCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCodigoActionPerformed(evt);
            }
        });

        jBTNActualizarServicio.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jBTNActualizarServicio.setText("Actualizar Servicio");
        jBTNActualizarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNActualizarServicioActionPerformed(evt);
            }
        });

        jBTNDarDeAlta.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jBTNDarDeAlta.setText("Dar de alta");
        jBTNDarDeAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNDarDeAltaActionPerformed(evt);
            }
        });

        jBTNLimpiarCampos.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 12)); // NOI18N
        jBTNLimpiarCampos.setText("Limpiar Campos");
        jBTNLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNLimpiarCamposActionPerformed(evt);
            }
        });

        jTADescripcion.setColumns(20);
        jTADescripcion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jTADescripcion.setRows(5);
        jScrollPane3.setViewportView(jTADescripcion);

        jTServiciosBaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTServiciosBaja.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTServiciosBajaFocusLost(evt);
            }
        });
        jTServiciosBaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTServiciosBajaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTServiciosBaja);

        jTServiciosAlta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTServiciosAlta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTServiciosAltaFocusGained(evt);
            }
        });
        jTServiciosAlta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTServiciosAltaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTServiciosAlta);

        jBTNfiltrarTabla.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 12)); // NOI18N
        jBTNfiltrarTabla.setText("Filtrar por codigo");
        jBTNfiltrarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNfiltrarTablaActionPerformed(evt);
            }
        });

        jBTNDarDeBaja.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jBTNDarDeBaja.setText("Dar de baja");
        jBTNDarDeBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNDarDeBajaActionPerformed(evt);
            }
        });

        jLServicioAlta.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jLServicioAlta.setText("Servicios Alta");

        jLservicioBaja.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jLservicioBaja.setText("Servicios Baja");

        jBTNCrearServicio1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 12)); // NOI18N
        jBTNCrearServicio1.setText("Crear Servicio");
        jBTNCrearServicio1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBTNCrearServicio1MouseClicked(evt);
            }
        });
        jBTNCrearServicio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNCrearServicio1ActionPerformed(evt);
            }
        });

        jTFCodigoBusqueda.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jTFCodigoBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCodigoBusquedaFocusLost(evt);
            }
        });
        jTFCodigoBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCodigoBusquedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jBTNCrearServicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBTNLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLCosto, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLDescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTFCosto, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTFCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jBTNActualizarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLServicioAlta)
                        .addComponent(jLservicioBaja)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTFCodigoBusqueda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBTNfiltrarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBTNDarDeBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTNDarDeAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLCosto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLDescripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBTNCrearServicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBTNLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jBTNActualizarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBTNfiltrarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFCodigoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLServicioAlta)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jBTNDarDeBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLservicioBaja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBTNDarDeAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTNActualizarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNActualizarServicioActionPerformed

        int filaSelecionada = jTServiciosAlta.getSelectedRow();

        if (filaSelecionada != -1) {
            if (jTFCodigo.getText().length() != 0 && jTFCosto.getText().length() != 0 && jTADescripcion.getText().length() != 0) {
                Servicio ServicioaActualizar = new Servicio();
                ServicioaActualizar.setCodigo(Integer.parseInt(jTFCodigo.getText()));
                ServicioaActualizar.setDescripcion(jTADescripcion.getText());
                ServicioaActualizar.setCosto(Double.parseDouble(jTFCosto.getText()));
                ServicioaActualizar.setId((Integer) jTServiciosAlta.getValueAt(filaSelecionada, 0));
                //   System.out.println(ServicioaActualizar.toString());
                sData.actualizarServicio(ServicioaActualizar);
                cargarServiciosAlta();
            } else {
                JOptionPane.showMessageDialog(this, "revise los campos (no se permiten campos vacios)");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No a seleccionado ningun servicio.");
        }


    }//GEN-LAST:event_jBTNActualizarServicioActionPerformed

    private void jBTNDarDeAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNDarDeAltaActionPerformed

        int filaSelecionada = jTServiciosBaja.getSelectedRow();

        //  Servicio ServicioSelecionado;
        if (filaSelecionada != -1) {

            //     ServicioSelecionado = sData.buscarServicioPorID((Integer) jTServiciosBaja.getValueAt(filaSelecionada, 0));
            sData.darDeAltaServicio((Integer) jTServiciosBaja.getValueAt(filaSelecionada, 0));

            cargarServiciosAlta();
            cargarServiciosBaja();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un servicio para dar de alta");
        }


    }//GEN-LAST:event_jBTNDarDeAltaActionPerformed

    private void jBTNLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNLimpiarCamposActionPerformed
        limpiarCampos();

    }//GEN-LAST:event_jBTNLimpiarCamposActionPerformed

    private void jBTNfiltrarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNfiltrarTablaActionPerformed

        if (jTFCodigoBusqueda.getText().isEmpty()) {
            cargarServiciosAlta();
            cargarServiciosBaja();

        } else {
            try {
                Integer.parseInt(jTFCodigoBusqueda.getText());
                cargarServiciosAlta();
                cargarServiciosBaja();
            } catch (NumberFormatException err) {
                JOptionPane.showMessageDialog(this, "El codigo para filtrar es incorrecto, tiene que ser numerico");
                jTFCodigoBusqueda.setText("");
            }
        }


    }//GEN-LAST:event_jBTNfiltrarTablaActionPerformed

    private void jBTNDarDeBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNDarDeBajaActionPerformed

        int filaSelecionada = jTServiciosAlta.getSelectedRow();

        //  Servicio ServicioSelecionado;
        if (filaSelecionada != -1) {

            //   ServicioSelecionado = sData.buscarServicioPorID((Integer) jTServiciosAlta.getValueAt(filaSelecionada, 0));
            sData.darDeBajaServicio((Integer) jTServiciosAlta.getValueAt(filaSelecionada, 0));

            cargarServiciosAlta();
            cargarServiciosBaja();
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un servicio para dar de baja");
        }


    }//GEN-LAST:event_jBTNDarDeBajaActionPerformed

    private void jTFCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCostoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCostoActionPerformed

    private void jTFCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCodigoFocusLost
        if (jTFCodigo.getText().length() != 0) {
            try {
                Integer.parseInt(jTFCodigo.getText());
            } catch (NumberFormatException errorCodigo) {
                JOptionPane.showMessageDialog(this, "El valor del codigo no es valido (tiene que ser numerico)");
                jTFCodigo.requestFocus();
            }
        }
    }//GEN-LAST:event_jTFCodigoFocusLost

    private void jTFCostoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCostoFocusLost
        if (jTFCosto.getText().length() != 0) {
            try {
                Double.parseDouble(jTFCosto.getText());
            } catch (NumberFormatException errorCodigo) {
                JOptionPane.showMessageDialog(this, "El valor ingresado no es valido (tiene que ser numerico)");
                jTFCosto.requestFocus();
            }
        }
    }//GEN-LAST:event_jTFCostoFocusLost

    private void jTServiciosAltaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTServiciosAltaFocusGained

    }//GEN-LAST:event_jTServiciosAltaFocusGained

    private void jTServiciosAltaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTServiciosAltaMouseClicked

        int filaSeleccionada = jTServiciosAlta.getSelectedRow();

        jTFCodigo.setText(jTServiciosAlta.getValueAt(filaSeleccionada, 1).toString());
        jTFCosto.setText(jTServiciosAlta.getValueAt(filaSeleccionada, 2).toString());
        jTADescripcion.setText((String) jTServiciosAlta.getValueAt(filaSeleccionada, 3));
        
        
        jTServiciosBaja.clearSelection();
    }//GEN-LAST:event_jTServiciosAltaMouseClicked

    private void jTFCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoActionPerformed

    private void jBTNCrearServicio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNCrearServicio1ActionPerformed

        if (jTFCodigo.getText().length() != 0 && jTFCosto.getText().length() != 0 && jTADescripcion.getText().length() != 0) {
            Servicio NuevoServicio = new Servicio();
            NuevoServicio.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            NuevoServicio.setDescripcion(jTADescripcion.getText());
            NuevoServicio.setCosto(Double.parseDouble(jTFCosto.getText()));
            sData.crearServicio(NuevoServicio);
            cargarServiciosAlta();
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "revise los campos (no se permiten campos vacios)");
        }
    }//GEN-LAST:event_jBTNCrearServicio1ActionPerformed

    private void jTFCodigoBusquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCodigoBusquedaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoBusquedaFocusLost

    private void jTFCodigoBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCodigoBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoBusquedaActionPerformed

    private void jTServiciosBajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTServiciosBajaMouseClicked
        int filaSeleccionada = jTServiciosBaja.getSelectedRow();

        jTFCodigo.setText(jTServiciosAlta.getValueAt(filaSeleccionada, 1).toString());
        jTFCosto.setText(jTServiciosAlta.getValueAt(filaSeleccionada, 2).toString());
        jTADescripcion.setText((String) jTServiciosAlta.getValueAt(filaSeleccionada, 3));
        
        
       
         jTServiciosAlta.clearSelection();
      
    }//GEN-LAST:event_jTServiciosBajaMouseClicked

    private void jTServiciosBajaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTServiciosBajaFocusLost
      
    }//GEN-LAST:event_jTServiciosBajaFocusLost

    private void jBTNCrearServicio1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBTNCrearServicio1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTNCrearServicio1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTNActualizarServicio;
    private javax.swing.JButton jBTNCrearServicio1;
    private javax.swing.JButton jBTNDarDeAlta;
    private javax.swing.JButton jBTNDarDeBaja;
    private javax.swing.JButton jBTNLimpiarCampos;
    private javax.swing.JButton jBTNfiltrarTabla;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLCosto;
    private javax.swing.JLabel jLDescripcion;
    private javax.swing.JLabel jLServicioAlta;
    private javax.swing.JLabel jLservicioBaja;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTADescripcion;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFCodigoBusqueda;
    private javax.swing.JTextField jTFCosto;
    private javax.swing.JTable jTServiciosAlta;
    private javax.swing.JTable jTServiciosBaja;
    // End of variables declaration//GEN-END:variables

    private void armarTablas() {

        ArrayList<Object> columnas = new ArrayList();
        columnas.add("id");
        columnas.add("Codigo");
        columnas.add("Costo");
        columnas.add("Descripcion");
        for (Object aux : columnas) {
            ModelotablaServiciosAlta.addColumn(aux);
            ModelotablaServiciosBaja.addColumn(aux);
        }

        jTServiciosAlta.setModel(ModelotablaServiciosAlta);
        jTServiciosAlta.getColumnModel().getColumn(0).setMaxWidth(0);
        jTServiciosAlta.getColumnModel().getColumn(0).setMinWidth(0);
        jTServiciosAlta.getColumnModel().getColumn(0).setPreferredWidth(0);

        jTServiciosBaja.setModel(ModelotablaServiciosBaja);
        jTServiciosBaja.getColumnModel().getColumn(0).setMaxWidth(0);
        jTServiciosBaja.getColumnModel().getColumn(0).setMinWidth(0);
        jTServiciosBaja.getColumnModel().getColumn(0).setPreferredWidth(0);

        jTServiciosAlta.setModel(ModelotablaServiciosAlta);
        jTServiciosBaja.setModel(ModelotablaServiciosBaja);

    }

    private void cargarServiciosAlta() {
        ModelotablaServiciosAlta.setNumRows(0);

        listaServiciosAlta = sData.listarServicios(false);

        for (Servicio aux : listaServiciosAlta) {

            if (jTFCodigoBusqueda.getText().isEmpty()) {
                ModelotablaServiciosAlta.addRow(new Object[]{aux.getId(), aux.getCodigo(), aux.getCosto(), aux.getDescripcion()});
            } else if (String.valueOf(aux.getCodigo()).contains(jTFCodigoBusqueda.getText())) {

                ModelotablaServiciosAlta.addRow(new Object[]{aux.getId(), aux.getCodigo(), aux.getCosto(), aux.getDescripcion()});

            }

        }
    }

    private void cargarServiciosBaja() {

        ModelotablaServiciosBaja.setNumRows(0);

        listaServiciosBaja = sData.listarServicios(true);

        for (Servicio aux : listaServiciosBaja) {

            if (jTFCodigoBusqueda.getText().isEmpty()) {
                ModelotablaServiciosBaja.addRow(new Object[]{aux.getId(), aux.getCodigo(), aux.getCosto(), aux.getDescripcion()});
            } else if (String.valueOf(aux.getCodigo()).contains(jTFCodigoBusqueda.getText())) {

                ModelotablaServiciosBaja.addRow(new Object[]{aux.getId(), aux.getCodigo(), aux.getCosto(), aux.getDescripcion()});

            }

        }
    }

    private void limpiarCampos() {
        jTFCodigo.setText("");
        jTFCosto.setText("");
        jTADescripcion.setText("");
    }

}
